	.text
	.globl 	main
main:	mfc0	$s0, $12		# turn on bits 0, 10, 11, 15 in Status Register
	ori	$s0, $s0, 0x8C01
	mtc0	$s0, $12		# move new value to Status Register

	li	$s1, 0xFFFF0000		# load address of Receiver Control Register	
	ori	$s2, $s1, 0x2		# turn on interrupt enable bit
	sw	$s2, 0($s1)		# move new value to Receiver Control Register

loop:	li	$s5, 1
	li	$s5, 2
	j	loop
	nop

.kdata
savedat:.space	4
t0:	.word	0
t1:	.word	0
t2:	.word	0
a0:	.word	0
v0:	.word	0
	.ktext	0x80000180
interrupthandler:
	sw	$t0, t0			# save registers
	sw	$t1, t1
	sw	$t2, t2
	sw	$a0, a0
	sw	$v0, v0

	.set	noat
	move	$t0, $at
	.set	at
	sw	$t0, savedat

	mfc0	$t0, $13		# check for interrupt
	srl	$t1, $t0, 2
	andi	$t1, $t1, 0x1f
	bne	$t1, $zero, idone
	nop
	
	li	$t1, 0xFFFF0000
	lw	$t2, 4($t1)

	move 	$a0, $t2
	li	$v0, 1
	syscall

idone:	lw	$t0, savedat
	.set	noat
	move	$at, $t0
	.set 	at
	
	lw	$a0, a0
	lw	$v0, v0
	lw	$t2, t2			# restore registers
	lw	$t1, t1
	lw	$t0, t0

	eret
